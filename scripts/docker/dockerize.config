### Command to obtain the string version.
# The command should print the version string alone (on stdout).
#
# Java with Maven
# version_cmd="mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec"
#
# Clojure with lein-project-version plugin
version_cmd="lein project-version|tail -1"
#
# Clojure going through Maven
# version_cmd="lein pom &> /dev/null && mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec"
#
# Python with setup.py file.
# version_cmd="python setup.py --version"
#
# Dummy: always fail to get version.
# version_cmd=false

### Files to be copied inside the docker container.
# absolute or relative to this script's directory.
# You can list directories and use '.' and '..', but no wildcards.
files=(
    "../../target/uberjar/stellar-ingest-\$version-standalone.jar"
    "../../resources/imdb/imdb_small.csv"
    # "/tmp/data.csv"
    # "~/test.txt"
)

### The Dockerfile path: absolute or relative to this script's directory.
# Same name expansion rules of files apply. 
dockerfile="Dockerfile"

### Version regular expressions.
# Define the format of release and snapshot versions.
#
# Maven-style semantic versioning.
snapshot_re="^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$"
release_re="^[0-9]+\.[0-9]+\.[0-9]+$"
# TODO: introduce  -hotfix version  too. Make  this an array  of pairs,  to link
# version regex with docker tag.
#
# Semantic versioning for python.
# snapshot_re="^[0-9]+\.[0-9]+\.[0-9]+b[0]?$"
# release_re="^[0-9]+\.[0-9]+\.[0-9]+$"
