################################################################################
# Stellar Ingest CI workflow
#
# - All commits, on all branches, get built and unit-tested.
# - Commits on branch devel (snapshots)  and master (releases), get packaged and
#   the binary artifacts (jars) published in the maven repository.
# - Commits from  master get  published only  if the version  string is  a valid
#   non-snapshot     and    they     have    an     annotated    version     tag
#   (stellar-ingest-VERSION), otherwise the step fails.
# - Commits  from devel  get published  only if  the version  string is  a valid
#   snapshot, otherwise  the step fails.  If  they have any tag  that suggests a
#   release version, the process fails as well.
# - Branches named 'develmoch/*'  and 'mastermoch/*' are treated  like devel and
#   master  respectively and  should  be  used exclusively  to  test/fix the  CI
#   workflow.
################################################################################

# Language settings ############################################################

language: clojure
jdk: oraclejdk8

# Environment ##################################################################

env:
  global:
    - INGEST_VERSION: $(lein pom &> /dev/null && 
                        mvn -q -Dexec.executable="echo" 
                               -Dexec.args='${project.version}' 
                               --non-recursive exec:exec)
    - INGEST_TAG: $(git describe --tags)

# Pipeline stages ##############################################################

jobs:

  include:
  # Unit-testing is always performed.
  - stage: test
    script: lein test
    
  # Publish development artifacts (snapshots) from branch devel
  - stage: publish
    if: branch = devel OR branch =~ ^develmock/
    script:
    - if [[ $INGEST_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$ ]] && [[ ! $INGEST_TAG =~ ^stellar-ingest-[0-9]+\.[0-9]+\.[0-9]$ ]] ; then
        echo "Publishing development version $INGEST_VERSION";
        lein deploy;
        lein deploy-uberjar;
      else
        echo "CONFLICT publishing development version $INGEST_VERSION - tag $INGEST_TAG";
        exit 1;
      fi
      
  # Publish stable artifacts (releases) from branch master
  - stage: release
    if: branch = master OR branch =~ ^mastermock/
    script:
    - if [[ $INGEST_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && [[ ! $INGEST_TAG = "stellar-ingest-$INGEST_VERSION" ]] ; then
        echo "Releasing version $INGEST_VERSION";        
        lein deploy;
        lein deploy-uberjar;
      else
        echo "CONFLICT releasing version $INGEST_VERSION - tag $INGEST_TAG";
        exit 1;
      fi

# Notifications ################################################################

notifications:
  slack:
    secure: uxsRUD3eQqpNZHlYOCjyvSlyAW3g050WtpMiG3ZZps5FL116k3j/ApZQ95GHRqpT4ASUXGgDG7WZvHIdjX7OMrKnI/9cQxi5nD/J9nJbJHdDEBf9QxaxV8+8Oq0nQT2xdyQpvzy5dTDUIElP6G4LH/iiDCK7eJieJIR15zwavW84BHV9Z/kXmv8/wNW4MaTh9OGVgCjw4SK/I3VordP7n/1I6PAC8Ilm1QewuGhOWoeb9hdsRg3wRRndd13OI+a902TlrYxCcei951Ew0KXi+w5oM/VhLA1PgEw+BSd5wzNhCKqgNai1RFX8oFfwbYky1rrzF1Y8L6gxpVa2fWbJEASDwtRYAHtrRp7fw83POVOWwV5SDXQNp7xdNFwh1VRI1Cd5eXLysIbxKTGL9fMr+TK5CqYAd/lQEb6uzQssDStX3JR7is35Jims3Jnz2dlBoHE1SCKWpdjHpVTENLPSXnGLtRlSp1SVTtJTPZg4FqXIhr5W3kg7n/ZKP3v5bTwE6fnht17JMFrmKawX9P2HI3GjQLITw/gPhefrjoaRYFbNsdOV5UtC3z/LYjaHGnWXsfwaJdBx79HRrnAS4ykBX/+OHBS8OnIjeghBVtJIwN33gX/PF9ZsX+5kyib0YC8R+oHLIv/nSvL2PLYcXf6AFnCc56hD8YjZftr3FoKFXTQ=
    # on_success: change
    on_success: always
    on_failure: always
 