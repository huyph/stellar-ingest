################################################################################
# Stellar Ingest CI workflow
#
# - All commits, on all branches, get built and unit-tested.
# - Commits on branch devel (snapshots)  and master (releases), get packaged and
#   the binary artifacts (jars) published in the maven repository.
# - Commits from  master get  published only  if the version  string is  a valid
#   non-snapshot     and    they     have    an     annotated    version     tag
#   (stellar-ingest-VERSION), otherwise the step fails.
# - Commits  from devel  get published  only if  the version  string is  a valid
#   snapshot, otherwise  the step fails.  If  they have any tag  that suggests a
#   release version, the process fails as well.
# - Branches named 'develmoch/*'  and 'mastermoch/*' are treated  like devel and
#   master  respectively and  should  be  used exclusively  to  test/fix the  CI
#   workflow.
#
################################################################################

# Language settings ###########################################################

language: clojure
jdk: oraclejdk8

# Environment #################################################################

env:
  global:
    - INGEST_VERSION: $(lein project-version 2> /dev/null)
    - INGEST_TAG: $(git describe --tags 2> /dev/null)
    - secure: Q1/HVUi0CgjcptwGF66O8csHIU+d2XaEfMvuJEeEb0VOjXyqUvQCIFJlz4sVip4nUz8/hruR0QEdS133Bp6V5Q+eIihhfYQmes4YiM8mK5ZbKP8MoI2uh6ptPdtaLAZb4vCcR8+EsoQ/9MEP9Bx58shZN5jv2phiAgQPMDZYBTPZYv8Ab7SW5xwKpLjVwzb8ypJordNgZcNFf5bhJOCSNA/ZVBqOtZ0bzpBAeKoQ3J7wOXp/rl3gaR2UXa6g87AqLQg0oRh6Yec+dN0BHaEqwUH5etIxCj4j7VmSz5ZOHCUeesTX+c+DHUelCwvDpxLbSOt0GdnnaEMn39DObnNpld49webawaRm6qkS6yUa+kugbr08KjMcH5RK5D9rVYVGJ+NxR9JvcqP3uKXgGo233FmOdJ5L+iQ7aiRehBrgl6RwSz9s5DEGwYrjLx0owiUA/JheYZIoZkPVrkgfliIM63J1Wf3aJuEs9Am1d/J2GsxsJ0PAj+v3XExluz9ffgTK6F1e77+9VJUmyOpcDg8t2rN2lZ4GUUS7dWmPmryH/9eEn/GwENKAkyP0jRXJhTkf6oE/MdcLq6flWpnjol/9X7HBoUStqnBs0/Cq4hiG7RDCErfLObVnQ4+qPRL8YNQ67g5uwcSLckGWKvoKLbs0GgjpqzjDG9Ah6Us7lkv8HtU=
    - secure: dY0iID4+aOfwHtXo98xzc0m+axa/3un5UyfIOcNSBj0aR4RHaMP8vbWAl95+udOosFirOWxGJGLBO4hqPdki6rwBjzj5ENCB0Mp07q4crynefA8SQfvuH72kVzETFHeN5pujvmE4K8kWWaR0FKikqeEQ15CIAhk93aVawcHL0N8nppGZqiGJJS0NbdeGyCK+gH8qSVEBXl9uX/IkttspPbTQKmqrFxuwRNekIE1yU1YswNl9Z1/r49CsJdQ6zxylz8agX9iQscq3vVrqxsd1ysqfst8nty9Rwv7JtTkBNoVxezd7PKVW2JijX89lwnhewGV7kRR0DqSWS5aHj9sdSgX5VsHLZjw/BAaatzRz0KF9Xtbur7RmQ42ybP3yI9d1F2HcqfIQ0sYNUyCuU+zwzABgvs3A/odYzjgiSySAhLJqg41bOZ+IsLAzNf0gEOSMB2Un4UpLWsEztlsOYsqwNtgdPwrC5T9hssmdtX1/ecKGoOv78l+OLiY5SNrneCTKHo/lzGk6JTkk0lAByHnng48KdaAg6B04GRMGjnVMHK6ytf4g96y3LdPMvRa4vp8ucGAxdL4herL90i2Z5wkcQ8Qnc1eH9DJ5uK/wGCXNM7jRMGeM4ErHf/nT3/m43tM+Ws8lhId5+rzuAzo3SSqqR7QMad7AhsXGuLOA9WJQgQw=

# Pipeline stages ##############################################################

jobs:

  include:
  # Unit-testing is always performed.
  - stage: test
    script:
    - lein cloverage --coveralls
    - curl -F 'json_file=@target/coverage/coveralls.json' "https://coveralls.io/api/v1/jobs"

  # Publish development artifacts and docker images (snapshots) from branch devel
  - stage: publish
    if: branch = devel OR branch =~ ^develmock/
    script:
    - echo "Attempting to publish development version [$INGEST_VERSION] - tag [$INGEST_TAG]";
    - if [[ $INGEST_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$ ]] &&
         [[ ! $INGEST_TAG =~ ^stellar-ingest-[0-9]+\.[0-9]+\.[0-9]$ ]] ; then
        echo "Publishing development version $INGEST_VERSION";
        lein deploy;
        lein deploy-uberjar;
        ./scripts/docker/build.sh;
      else
        echo "CONFLICT publishing development version [$INGEST_VERSION] - tag [$INGEST_TAG]";
        exit 1;
      fi
      
  # Publish stable artifacts and docker images (releases) from branch master
  - stage: release
    if: branch = master OR branch =~ ^mastermock/
    script:
    - if [[ $INGEST_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] &&
         [[ ! $INGEST_TAG = "stellar-ingest-$INGEST_VERSION" ]] ; then
        echo "Releasing version [$INGEST_VERSION]";        
        lein deploy;
        lein deploy-uberjar;
        ./scripts/docker/build.sh;
      else
        echo "CONFLICT releasing version [$INGEST_VERSION] - tag [$INGEST_TAG]";
        exit 1;
      fi

# # Notifications ################################################################

notifications:
  slack:
    secure: Y87bsz8T29L2SRL4Sh5e6JPPLd2AsSx42Cyo6GodSU7Yu+gduHKx+/iLzxr/N2sqTliuMMRDLpHP/4NuhMVhxyjC+Fld0aFVUwJdKnB+K+8Id8LdZqh0SznKYozbESDh+GMKwzHEGS2PSVqvlcFziuYmjAoXtufZS/k5xXuju4E3Ge3lgZqynOZ88UPVIPkAFaEBKrMG8izrzF8R6plrceH5DrQW3uF/JQURpQF0DdDAQzZuSbBgCRVyzP7vc7RkDiXJ3YbCcNQJs5WlUHdh1euKaK8eqwlqzJrlZV/qINR277GjUKV8tJO/iGW3AahS4M4NkWMdXyPPEpP1XzSmc1tIio8jp6syD/mLuucMu0F+QeR/SlvksxKqaUFZtlQBs94uFOx40Ew+fFbSmCm6UNeMpcwHtPR2t9SOSuh7fXN50X+5+fSXdrfe8Q5BgACDhl5C4li56zejLqN9//81LFnHFrDbGjaYZNAxrxj7shV2lTJiTuNbgK+WwfiZGz3copnDEAY0zPDP9aeK1Z4I5/74XzMVfIk76609MKboWO/e075mbKI0Gw7qv3gL9disokShOksUMCMEBLZMmpase7+7xSnj0jEHkjNhirMQ7UfsEGjE00qJlRye8srkmHSbphd7b5GogQz9EclOVtqn87KZagM9p1w/pQ9l2s+Cz8E=
  on_success: change
  on_failure: always
